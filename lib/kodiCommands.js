'use strict';

// https://kodi.wiki/view/Action_IDs
// https://github.com/xbmc/xbmc/blob/master/system/keymaps/keyboard.xml

var commands = {

	/*
	 * These are buttons used in the NEEO button groups
	 */

	// Color Buttons
	'FUNCTION RED': { name: 'Red button', method: "Input.ExecuteAction", params: { action: "red" } },
	'FUNCTION GREEN': { name: 'Green button', method: "Input.ExecuteAction", params: { action: "green" } },
	'FUNCTION YELLOW': { name: 'Yellow button', method: "Input.ExecuteAction", params: { action: "yellow" } },
	'FUNCTION BLUE': { name: 'Blue button', method: "Input.ExecuteAction", params: { action: "blue" } },
	// Controlpad
	'CURSOR UP': { name: 'Cursor up', method: 'Input.up' },
	'CURSOR DOWN': { name: 'Cursor down', method: 'Input.down' },
	'CURSOR LEFT': { name: 'Cursor left', method: 'Input.left' },
	'CURSOR RIGHT': { name: 'Cursor right', method: 'Input.right' },
	'CURSOR ENTER': { name: 'Select', method: 'Input.select' },
	// Numpad
	'DIGIT 0': { name: 'Digit 0', method: "Input.ExecuteAction", params: { action: "number0" } },
	'DIGIT 1': { name: 'Digit 1', method: "Input.ExecuteAction", params: { action: "number1" } },
	'DIGIT 2': { name: 'Digit 2', method: "Input.ExecuteAction", params: { action: "number2" } },
	'DIGIT 3': { name: 'Digit 3', method: "Input.ExecuteAction", params: { action: "number3" } },
	'DIGIT 4': { name: 'Digit 4', method: "Input.ExecuteAction", params: { action: "number4" } },
	'DIGIT 5': { name: 'Digit 5', method: "Input.ExecuteAction", params: { action: "number5" } },
	'DIGIT 6': { name: 'Digit 6', method: "Input.ExecuteAction", params: { action: "number6" } },
	'DIGIT 7': { name: 'Digit 7', method: "Input.ExecuteAction", params: { action: "number7" } },
	'DIGIT 8': { name: 'Digit 8', method: "Input.ExecuteAction", params: { action: "number8" } },
	'DIGIT 9': { name: 'Digit 9', method: "Input.ExecuteAction", params: { action: "number9" } },
	// Power
	'POWER ON': { name: 'Power on', method: 'WOL' },
	'POWER OFF': { name: 'Power off', method: 'System.Shutdown' },
	// Channel Zapper
	'CHANNEL UP': { name: 'Channel up', method: "Input.ExecuteAction", params: { action: "channelup" } },
	'CHANNEL DOWN': { name: 'Channel down', method: "Input.ExecuteAction", params: { action: "channeldown" } },
	// Transport
	'PLAY': { name: 'Play', method: "Input.ExecuteAction", params: { action: "playpause" } },
	'PAUSE': { name: 'Pause', method: "Input.ExecuteAction", params: { action: "pause" } },
	'STOP': { name: 'Stop', method: "Input.ExecuteAction", params: { action: "stop" } },
	// Transport Search
	'REVERSE': { name: 'Reverse', method: "Player.SetSpeed", params: { playerid: 1, speed: -2 } },
	'FORWARD': { name: 'Forward', method: "Player.SetSpeed", params: { playerid: 1, speed: 2 } },
	// Transport Scan
	'PREVIOUS': { name: 'Previous', method: "Player.GoTo", params: { playerid: 1, to: "previous" } },
	'NEXT': { name: 'Next', method: "Player.GoTo", params: { playerid: 1, to: "next" } },
	// Transport Skip
	'SKIP SECONDS BACKWARD': { name: 'Skip back', method: "Input.ExecuteAction", params: { action: "skipback" } },
	'SKIP SECONDS FORWARD': { name: 'Skip forward', method: "Input.ExecuteAction", params: { action: "skipforward" } },
	// Language
	'SUBTITLE': { name: 'Subtitle', method: "Input.ExecuteAction", params: { action: "nextsubtitle" } },
	'LANGUAGE': { name: 'Audio language', method: "Input.ExecuteAction", params: { action: "audionextlanguage" } },
	// Menu and Back
	'MENU': { name: 'Menu', method: "Input.ExecuteAction", params: { action: "menu" } },
	'BACK': { name: 'Back', method: 'Input.Back' },
	// Volume
	'VOLUME UP': { name: 'Volume up', method: "Input.ExecuteAction", params: { action: "volumeup" } },
	'VOLUME DOWN': { name: 'Volume down', method: "Input.ExecuteAction", params: { action: "volumedown" } },
	'MUTE TOGGLE': { name: 'Mute', method: "Input.ExecuteAction", params: { action: "mute" } },
	// Record
	'RECORD': { name: 'Record', method: "Input.ExecuteAction", params: { action: "record" } },
	'MY RECORDINGS': { name: 'My recordings', method: "GUI.ActivateWindow", params: { action: "tvrecordings" } },
	'LIVE': { name: 'Live', method: "GUI.ActivateWindow", params: { action: "fullscreenlivetv" } },

	/*
	 *	Input.* methods
	 */

	'CONTEXT MENU': { name: 'Context menu', method: "Input.ContextMenu" },
	'HOME': { name: 'Home', method: "Input.Home" },
	'INFO': { name: 'Info', method: "Input.Info" },
	'SHOWCODEC': { name: 'Show codec info', method: "Input.ShowCodec" },
	'SHOWOSD': { name: 'Show OSD', method: "Input.ShowOSD" },
	'SHOWPLAYERPROCESSINFO': { name: 'Show OSD', method: "Input.ShowPlayerProcessInfo" },

	/*
	 * These are the rest of Kodi's (relevant) input actions
	 */

	'PAGEUP':  { name: 'Page up',  method: 'Input.ExecuteAction',  params: { action: 'pageup' } },
	'PAGEDOWN':  { name: 'Page down',  method: 'Input.ExecuteAction',  params: { action: 'pagedown' } },
	'HIGHLIGHT':  { name: 'Highlight',  method: 'Input.ExecuteAction',  params: { action: 'highlight' } },
	'PARENTDIR':  { name: 'Parent directory',  method: 'Input.ExecuteAction',  params: { action: 'parentdir' } },
	'PARENTFOLDER':  { name: 'Parent folder',  method: 'Input.ExecuteAction',  params: { action: 'parentfolder' } },
	'PREVIOUSMENU':  { name: 'Previous menu',  method: 'Input.ExecuteAction',  params: { action: 'previousmenu' } },
	'INFO':  { name: 'Info',  method: 'Input.ExecuteAction',  params: { action: 'info' } },
	'SKIPPREVIOUS': { name: 'Skip previous', method: "Input.ExecuteAction", params: { action: "skipprevious" } },
	'SKIPNEXT': { name: 'Skip next', method: "Input.ExecuteAction", params: { action: "skipnext" } },
	'FULLSCREEN':  { name: 'Full screen',  method: 'Input.ExecuteAction',  params: { action: 'fullscreen' } },
	'ASPECTRATIO':  { name: 'Aspect ratio',  method: 'Input.ExecuteAction',  params: { action: 'aspectratio' } },
	'STEPFORWARD':  { name: 'Step forward',  method: 'Input.ExecuteAction',  params: { action: 'stepforward' } },
	'STEPBACK':  { name: 'Step back',  method: 'Input.ExecuteAction',  params: { action: 'stepback' } },
	'BIGSTEPFORWARD':  { name: 'Big step forward',  method: 'Input.ExecuteAction',  params: { action: 'bigstepforward' } },
	'BIGSTEPBACK':  { name: 'Big step back',  method: 'Input.ExecuteAction',  params: { action: 'bigstepback' } },
	'CHAPTERORBIGSTEPFORWARD':  { name: 'Chapter or big step forward',  method: 'Input.ExecuteAction',  params: { action: 'chapterorbigstepforward' } },
	'CHAPTERORBIGSTEPBACK':  { name: 'Chapter or big step back',  method: 'Input.ExecuteAction',  params: { action: 'chapterorbigstepback' } },
	'SHOWSUBTITLES':  { name: 'Show subtitles',  method: 'Input.ExecuteAction',  params: { action: 'showsubtitles' } },
	'CYCLESUBTITLE':  { name: 'Cycle subtitle',  method: 'Input.ExecuteAction',  params: { action: 'cyclesubtitle' } },
	'PLAYERDEBUG':  { name: 'Player debug info',  method: 'Input.ExecuteAction',  params: { action: 'playerdebug' } },
	'NEXTPICTURE':  { name: 'Next picture',  method: 'Input.ExecuteAction',  params: { action: 'nextpicture' } },
	'PREVIOUSPICTURE':  { name: 'Previous picture',  method: 'Input.ExecuteAction',  params: { action: 'previouspicture' } },
	'ZOOMOUT':  { name: 'Zoom out',  method: 'Input.ExecuteAction',  params: { action: 'zoomout' } },
	'ZOOMIN':  { name: 'Zoom in',  method: 'Input.ExecuteAction',  params: { action: 'zoomin' } },
	'PLAYLIST':  { name: 'Playlist',  method: 'Input.ExecuteAction',  params: { action: 'playlist' } },
	'QUEUE':  { name: 'Queue',  method: 'Input.ExecuteAction',  params: { action: 'queue' } },
	'CLOSE':  { name: 'Close',  method: 'Input.ExecuteAction',  params: { action: 'close' } },
	'SMALLSTEPBACK':  { name: 'Small step back',  method: 'Input.ExecuteAction',  params: { action: 'smallstepback' } },
	'FASTFORWARD':  { name: 'Fast forward',  method: 'Input.ExecuteAction',  params: { action: 'fastforward' } },
	'REWIND':  { name: 'Rewind',  method: 'Input.ExecuteAction',  params: { action: 'rewind' } },
	'PLAY':  { name: 'Play',  method: 'Input.ExecuteAction',  params: { action: 'play' } },
	'SWITCHPLAYER':  { name: 'Switch player',  method: 'Input.ExecuteAction',  params: { action: 'switchplayer' } },
	'DELETE':  { name: 'Delete',  method: 'Input.ExecuteAction',  params: { action: 'delete' } },
	'COPY':  { name: 'Copy',  method: 'Input.ExecuteAction',  params: { action: 'copy' } },
	'MOVE':  { name: 'Move',  method: 'Input.ExecuteAction',  params: { action: 'move' } },
	'SCREENSHOT':  { name: 'Screenshot',  method: 'Input.ExecuteAction',  params: { action: 'screenshot' } },
	'RENAME':  { name: 'Rename',  method: 'Input.ExecuteAction',  params: { action: 'rename' } },
	'TOGGLEWATCHED':  { name: 'Toggle watched state',  method: 'Input.ExecuteAction',  params: { action: 'togglewatched' } },
	'SCANITEM':  { name: 'Scan item',  method: 'Input.ExecuteAction',  params: { action: 'scanitem' } },
	'RELOADKEYMAPS':  { name: 'Reload keymaps',  method: 'Input.ExecuteAction',  params: { action: 'reloadkeymaps' } },
	'BACKSPACE':  { name: 'Backspace',  method: 'Input.ExecuteAction',  params: { action: 'backspace' } },
	'SCROLLUP':  { name: 'Scroll up',  method: 'Input.ExecuteAction',  params: { action: 'scrollup' } },
	'SCROLLDOWN':  { name: 'Scroll down',  method: 'Input.ExecuteAction',  params: { action: 'scrolldown' } },
	'MOVEITEMUP':  { name: 'Move item up',  method: 'Input.ExecuteAction',  params: { action: 'moveitemup' } },
	'MOVEITEMDOWN':  { name: 'Move item down',  method: 'Input.ExecuteAction',  params: { action: 'moveitemdown' } },
	'SHOWTIME':  { name: 'Show time',  method: 'Input.ExecuteAction',  params: { action: 'showtime' } },
	'SHOWPRESET':  { name: 'Show visualisation preset',  method: 'Input.ExecuteAction',  params: { action: 'showpreset' } },
	'NEXTPRESET':  { name: 'Next visualisation preset',  method: 'Input.ExecuteAction',  params: { action: 'nextpreset' } },
	'PREVIOUSPRESET':  { name: 'Previous visualisation preset',  method: 'Input.ExecuteAction',  params: { action: 'previouspreset' } },
	'LOCKPRESET':  { name: 'Lock visualisation preset',  method: 'Input.ExecuteAction',  params: { action: 'lockpreset' } },
	'RANDOMPRESET':  { name: 'Random visualisation preset',  method: 'Input.ExecuteAction',  params: { action: 'randompreset' } },
	'INCREASEVISRATING':  { name: 'Increase visrating',  method: 'Input.ExecuteAction',  params: { action: 'increasevisrating' } },
	'DECREASEVISRATING':  { name: 'Decrease visrating',  method: 'Input.ExecuteAction',  params: { action: 'decreasevisrating' } },
	'SHOWVIDEOMENU':  { name: 'Show video menu',  method: 'Input.ExecuteAction',  params: { action: 'showvideomenu' } },
	'ENTER':  { name: 'Enter',  method: 'Input.ExecuteAction',  params: { action: 'enter' } },
	'INCREASERATING':  { name: 'Increase rating',  method: 'Input.ExecuteAction',  params: { action: 'increaserating' } },
	'DECREASERATING':  { name: 'Decrease rating',  method: 'Input.ExecuteAction',  params: { action: 'decreaserating' } },
	'SETRATING':  { name: 'Set rating',  method: 'Input.ExecuteAction',  params: { action: 'setrating' } },
	'TOGGLEFULLSCREEN':  { name: 'Toggle full screen',  method: 'Input.ExecuteAction',  params: { action: 'togglefullscreen' } },
	'NEXTSCENE':  { name: 'Next scene',  method: 'Input.ExecuteAction',  params: { action: 'nextscene' } },
	'PREVIOUSSCENE':  { name: 'Previous scene',  method: 'Input.ExecuteAction',  params: { action: 'previousscene' } },
	'LASTPAGE':  { name: 'Last page',  method: 'Input.ExecuteAction',  params: { action: 'lastpage' } },
	'GUIPROFILE':  { name: 'GUI profile',  method: 'Input.ExecuteAction',  params: { action: 'guiprofile' } },
	'PREVIOUSCHANNELGROUP':  { name: 'Previous channel group',  method: 'Input.ExecuteAction',  params: { action: 'previouschannelgroup' } },
	'NEXTCHANNELGROUP':  { name: 'Next channel group',  method: 'Input.ExecuteAction',  params: { action: 'nextchannelgroup' } },
	'PLAYPVR':  { name: 'Play PVR',  method: 'Input.ExecuteAction',  params: { action: 'playpvr' } },
	'PLAYPVRTV':  { name: 'Play PVR TV',  method: 'Input.ExecuteAction',  params: { action: 'playpvrtv' } },
	'PLAYPVRRADIO':  { name: 'Play PVR radio',  method: 'Input.ExecuteAction',  params: { action: 'playpvrradio' } },

	/*
	 *	Useful API methods
	 */

};

/*




FAVORITE: { method: "GUI.ActivateWindow", params: { window: "pvrosdchannels" }, cac: false },


EXIT: { method: "Input.back", params: {}, cac: false },
MENU: { method: "Input.ContextMenu", params: {}, cac: false },
///"Page Up":{"method": "Input.ExecuteAction","params":{ "action": "pageup"},"cac":false},
"Scan Video Library": { method: "VideoLibrary.Scan", params: {}, cac: false },
"Scan Audio Library": { method: "AudioLibrary.Scan", params: {}, cac: false },

///"Parent Dir":{"method": "Input.ExecuteAction","params":{ "action": "parentdir"},"cac":false},
///"Parent Folder":{"method": "Input.ExecuteAction","params":{ "action": "parentfolder"},"cac":false},
///"Previous Menu":{"method": "Input.ExecuteAction","params":{ "action": "previousmenu"},"cac":false},
FULLSCREEN: { method: "Input.ExecuteAction", params: { action: "fullscreen" }, cac: false },
///"Aspectratio":{"method": "Input.ExecuteAction","params":{ "action": "aspectratio"},"cac":false},
OSD: { method: "Input.ExecuteAction", params: { action: "osd" }, cac: false },
///"Show Subtitles":{"method": "Input.ExecuteAction","params":{ "action": "showsubtitles"},"cac":false},

//////"Cycle Subtitle":{"method": "Input.ExecuteAction","params":{ "action": "cyclesubtitle"},"cac":false},
///"Player Debug":{"method": "Input.ExecuteAction","params":{ "action": "playerdebug"},"cac":false},
"CODEC INFO": { method: "Input.ExecuteAction", params: { action: "codecinfo" }, cac: false },
///"Player Processinfo":{"method": "Input.ExecuteAction","params":{ "action": "playerprocessinfo"},"cac":false},
///"Next Picture":{"method": "Input.ExecuteAction","params":{ "action": "nextpicture"},"cac":false},
///"Previous Picture":{"method": "Input.ExecuteAction","params":{ "action": "previouspicture"},"cac":false},
///"Zoomout":{"method": "Input.ExecuteAction","params":{ "action": "zoomout"},"cac":false},
///"Zoomin":{"method": "Input.ExecuteAction","params":{ "action": "zoomin"},"cac":false},
///"Playlist":{"method": "Input.ExecuteAction","params":{ "action": "playlist"},"cac":false},
///"Queue":{"method": "Input.ExecuteAction","params":{ "action": "queue"},"cac":false},
///"Zoom normal":{"method": "Input.ExecuteAction","params":{ "action": "zoomnormal"},"cac":false},
///"Zoomlevel 1":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel1"},"cac":false},
///"Zoomlevel 2":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel2"},"cac":false},
///"Zoomlevel 3":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel3"},"cac":false},
///"Zoomlevel 4":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel4"},"cac":false},
///"Zoomlevel 5":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel5"},"cac":false},
///"Zoomlevel 6":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel6"},"cac":false},
///"Zoomlevel 7":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel7"},"cac":false},
///"Zoomlevel 8":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel8"},"cac":false},
///"Zoomlevel 9":{"method": "Input.ExecuteAction","params":{ "action": "zoomlevel9"},"cac":false},
///"Next Calibration":{"method": "Input.ExecuteAction","params":{ "action": "nextcalibration"},"cac":false},
///"Reset Calibration":{"method": "Input.ExecuteAction","params":{ "action": "resetcalibration"},"cac":false},
///"Analog Move":{"method": "Input.ExecuteAction","params":{ "action": "analogmove"},"cac":false},
///"Analog Move X":{"method": "Input.ExecuteAction","params":{ "action": "analogmovex"},"cac":false},
///"Analog Move Y":{"method": "Input.ExecuteAction","params":{ "action": "analogmovey"},"cac":false},
///"Rotate":{"method": "Input.ExecuteAction","params":{ "action": "rotate"},"cac":false},
///"Rotate CCW":{"method": "Input.ExecuteAction","params":{ "action": "rotateccw"},"cac":false},
///"Subtitledelay -":{"method": "Input.ExecuteAction","params":{ "action": "subtitledelayminus"},"cac":false},
///"Subtitledelay":{"method": "Input.ExecuteAction","params":{ "action": "subtitledelay"},"cac":false},
///"Subtitledelay +":{"method": "Input.ExecuteAction","params":{ "action": "subtitledelayplus"},"cac":false},
///"Audiodelay -":{"method": "Input.ExecuteAction","params":{ "action": "audiodelayminus"},"cac":false},
///"Audiodelay":{"method": "Input.ExecuteAction","params":{ "action": "audiodelay"},"cac":false},
///"Audiodelay +":{"method": "Input.ExecuteAction","params":{ "action": "audiodelayplus"},"cac":false},
///"Subtitle shift up":{"method": "Input.ExecuteAction","params":{ "action": "subtitleshiftup"},"cac":false},
///"Subtitle shift down":{"method": "Input.ExecuteAction","params":{ "action": "subtitleshiftdown"},"cac":false},
///"Subtitle align":{"method": "Input.ExecuteAction","params":{ "action": "subtitlealign"},"cac":false},

///"Vertical shift up":{"method": "Input.ExecuteAction","params":{ "action": "verticalshiftup"},"cac":false},
///"Vertical shift down":{"method": "Input.ExecuteAction","params":{ "action": "verticalshiftdown"},"cac":false},
///"Next resolution":{"method": "Input.ExecuteAction","params":{ "action": "nextresolution"},"cac":false},
///"Audio toggle digita":{"method": "Input.ExecuteAction","params":{ "action": "audiotoggledigita"},"cac":false},

///"Scrollup":{"method": "Input.ExecuteAction","params":{ "action": "scrollup"},"cac":false},
///"Scrolldown":{"method": "Input.ExecuteAction","params":{ "action": "scrolldown"},"cac":false},
///"Analog fastforward":{"method": "Input.ExecuteAction","params":{ "action": "analogfastforward"},"cac":false},
///"Analog rewind":{"method": "Input.ExecuteAction","params":{ "action": "analogrewind"},"cac":false},
///"Contextmenu":{"method": "Input.ExecuteAction","params":{ "action": "contextmenu"},"cac":false},
///"Shift":{"method": "Input.ExecuteAction","params":{ "action": "shift"},"cac":false},
///"Symbols":{"method": "Input.ExecuteAction","params":{ "action": "symbols"},"cac":false},
///"Cursor left":{"method": "Input.ExecuteAction","params":{ "action": "cursorleft"},"cac":false},
///"Cursor right":{"method": "Input.ExecuteAction","params":{ "action": "cursorright"},"cac":false},
///"Analog seek forward":{"method": "Input.ExecuteAction","params":{ "action": "analogseekforward"},"cac":false},
///"Analog seek back":{"method": "Input.ExecuteAction","params":{ "action": "analogseekback"},"cac":false},

///"Show video menu":{"method": "Input.ExecuteAction","params":{ "action": "showvideomenu"},"cac":false},
///"Next letter":{"method": "Input.ExecuteAction","params":{ "action": "nextletter"},"cac":false},
///"Prev letter":{"method": "Input.ExecuteAction","params":{ "action": "prevletter"},"cac":false},
///"jump sms 2":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms2"},"cac":false},
///"jump sms 3":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms3"},"cac":false},
///"jump sms 4":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms4"},"cac":false},
///"jump sms 5":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms5"},"cac":false},
///"jump sms 6":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms6"},"cac":false},
///"jump sms 7":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms7"},"cac":false},
///"jump sms 8":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms8"},"cac":false},
///"jump sms 9":{"method": "Input.ExecuteAction","params":{ "action": "jumpsms9"},"cac":false},
///"Filter":{"method": "Input.ExecuteAction","params":{ "action": "filter"},"cac":false},
///"Filter clear":{"method": "Input.ExecuteAction","params":{ "action": "filterclear"},"cac":false},
///"filter sms 2":{"method": "Input.ExecuteAction","params":{ "action": "filtersms2"},"cac":false},
///"filter sms 3":{"method": "Input.ExecuteAction","params":{ "action": "filtersms3"},"cac":false},
///"filter sms 4":{"method": "Input.ExecuteAction","params":{ "action": "filtersms4"},"cac":false},
///"filter sms 5":{"method": "Input.ExecuteAction","params":{ "action": "filtersms5"},"cac":false},
///"filter sms 6":{"method": "Input.ExecuteAction","params":{ "action": "filtersms6"},"cac":false},
///"filter sms 7":{"method": "Input.ExecuteAction","params":{ "action": "filtersms7"},"cac":false},
///"filter sms 8":{"method": "Input.ExecuteAction","params":{ "action": "filtersms8"},"cac":false},
///"filter sms 9":{"method": "Input.ExecuteAction","params":{ "action": "filtersms9"},"cac":false},
///"Firstpage":{"method": "Input.ExecuteAction","params":{ "action": "firstpage"},"cac":false},
///"Lastpage":{"method": "Input.ExecuteAction","params":{ "action": "lastpage"},"cac":false},
///"GUI Profile":{"method": "Input.ExecuteAction","params":{ "action": "guiprofile"},"cac":false},
///"Increase par":{"method": "Input.ExecuteAction","params":{ "action": "increasepar"},"cac":false},
///"Decrease par":{"method": "Input.ExecuteAction","params":{ "action": "decreasepar"},"cac":false},
///"Vol amp up":{"method": "Input.ExecuteAction","params":{ "action": "volampup"},"cac":false},
///"Vol amp down":{"method": "Input.ExecuteAction","params":{ "action": "volampdown"},"cac":false},
///"Volume amplification":{"method": "Input.ExecuteAction","params":{ "action": "volumeamplification"},"cac":false},
///"Create bookmark":{"method": "Input.ExecuteAction","params":{ "action": "createbookmark"},"cac":false},
///"Create episode bookmark":{"method": "Input.ExecuteAction","params":{ "action": "createepisodebookmark"},"cac":false},
///"Settings reset":{"method": "Input.ExecuteAction","params":{ "action": "settingsreset"},"cac":false},
///"Settings level change":{"method": "Input.ExecuteAction","params":{ "action": "settingslevelchange"},"cac":false},
///"Stereo mode":{"method": "Input.ExecuteAction","params":{ "action": "stereomode"},"cac":false},
///"Next stereo mode":{"method": "Input.ExecuteAction","params":{ "action": "nextstereomode"},"cac":false},
///"Previous stereo mode":{"method": "Input.ExecuteAction","params":{ "action": "previousstereomode"},"cac":false},
///"Toggle stereo mode":{"method": "Input.ExecuteAction","params":{ "action": "togglestereomode"},"cac":false},
///"Stereo mode to mono":{"method": "Input.ExecuteAction","params":{ "action": "stereomodetomono"},"cac":false},
///"Previous channel group":{"method": "Input.ExecuteAction","params":{ "action": "previouschannelgroup"},"cac":false},
///"Next channel group":{"method": "Input.ExecuteAction","params":{ "action": "nextchannelgroup"},"cac":false},

///"Toggle comm skip":{"method": "Input.ExecuteAction","params":{ "action": "togglecommskip"},"cac":false},
///"Show timerrule":{"method": "Input.ExecuteAction","params":{ "action": "showtimerrule"},"cac":false},
///"Leftclick":{"method": "Input.ExecuteAction","params":{ "action": "leftclick"},"cac":false},
///"Rightclick":{"method": "Input.ExecuteAction","params":{ "action": "rightclick"},"cac":false},
///"Middleclick":{"method": "Input.ExecuteAction","params":{ "action": "middleclick"},"cac":false},
///"Doubleclick":{"method": "Input.ExecuteAction","params":{ "action": "doubleclick"},"cac":false},
///"Longclick":{"method": "Input.ExecuteAction","params":{ "action": "longclick"},"cac":false},
///"Wheelup":{"method": "Input.ExecuteAction","params":{ "action": "wheelup"},"cac":false},
///"Wheeldown":{"method": "Input.ExecuteAction","params":{ "action": "wheeldown"},"cac":false},
///"Mousedrag":{"method": "Input.ExecuteAction","params":{ "action": "mousedrag"},"cac":false},
///"Mousemove":{"method": "Input.ExecuteAction","params":{ "action": "mousemove"},"cac":false},
///"Tap":{"method": "Input.ExecuteAction","params":{ "action": "tap"},"cac":false},
///"Longpress":{"method": "Input.ExecuteAction","params":{ "action": "longpress"},"cac":false},
///"Pangesture":{"method": "Input.ExecuteAction","params":{ "action": "pangesture"},"cac":false},
///"Zoomgesture":{"method": "Input.ExecuteAction","params":{ "action": "zoomgesture"},"cac":false},
///"Rotategesture":{"method": "Input.ExecuteAction","params":{ "action": "rotategesture"},"cac":false},
///"Swipe left":{"method": "Input.ExecuteAction","params":{ "action": "swipeleft"},"cac":false},
///"Swipe right":{"method": "Input.ExecuteAction","params":{ "action": "swiperight"},"cac":false},
///"Swipe up":{"method": "Input.ExecuteAction","params":{ "action": "swipeup"},"cac":false},
///"Swipe down":{"method": "Input.ExecuteAction","params":{ "action": "swipedown"},"cac":false},
///"Error":{"method": "Input.ExecuteAction","params":{ "action": "error"},"cac":false},
///"Noop":{"method": "Input.ExecuteAction","params":{ "action": "noop"},"params":{},"cac":false},
*/

module.exports = commands;
